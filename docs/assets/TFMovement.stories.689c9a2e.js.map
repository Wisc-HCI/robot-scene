{"version":3,"file":"TFMovement.stories.689c9a2e.js","sources":["../../src/stories/TFMovement.stories.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Scene from \"../components/Scene\";\nimport { useDefaultSceneStore } from \"../components\";\nimport { MeshLookupTable } from \"./meshes/MeshLookup\";\nimport { ErrorBoundary } from 'react-error-boundary';\nimport ErrorFallback from './ErrorFallback';\nexport default {\n  title: \"Moving Transforms\",\n  component: Scene\n};\nconst Template = args => {\n  const {\n    tfs,\n    items,\n    hulls,\n    lines,\n    texts,\n    points,\n    ...otherArgs\n  } = args;\n  const setProperty = useDefaultSceneStore(state => state.setProperty);\n  const [translateSnap, setTranslateSnap] = useState(0);\n  const [rotateSnap, setRotateSnap] = useState(0);\n  const [scaleSnap, setScaleSnap] = useState(0);\n  useEffect(() => {\n    useDefaultSceneStore.setState({\n      tfs,\n      items,\n      hulls,\n      lines,\n      texts,\n      points\n    });\n  }, [tfs, items, hulls, lines, texts, points]);\n  return <ErrorBoundary FallbackComponent={ErrorFallback}>\n    <div style={{\n      height: \"calc(100vh - 3rem)\",\n      width: \"calc(100vw - 2rem)\"\n    }}>\n        \n      <Scene {...otherArgs} store={useDefaultSceneStore} meshLookup={MeshLookupTable} displayTfs translateSnap={translateSnap} rotateSnap={rotateSnap} scaleSnap={scaleSnap} />\n      <div style={{\n        textAlign: \"center\"\n      }}>\n        <button onClick={() => {\n          setTranslateSnap(0);\n          setProperty([\"tfs\", \"moving\", \"transformMode\"], \"translate\");\n        }}>\n          Translate Free\n        </button>\n        <button onClick={() => {\n          setTranslateSnap(0.25);\n          setProperty([\"tfs\", \"moving\", \"transformMode\"], \"translate\");\n        }}>\n          Translate Snapping\n        </button>\n        <button onClick={() => {\n          setRotateSnap(0);\n          setProperty([\"tfs\", \"moving\", \"transformMode\"], \"rotate\");\n        }}>\n          Rotate Free\n        </button>\n        <button onClick={() => {\n          setRotateSnap(Math.PI / 6);\n          setProperty([\"tfs\", \"moving\", \"transformMode\"], \"rotate\");\n        }}>\n          Rotate Snapping\n        </button>\n        <button onClick={() => {\n          setScaleSnap(0);\n          setProperty([\"tfs\", \"moving\", \"transformMode\"], \"scale\");\n        }}>\n          Scale Free\n        </button>\n        <button onClick={() => {\n          setScaleSnap(0.1);\n          setProperty([\"tfs\", \"moving\", \"transformMode\"], \"scale\");\n        }}>\n          Scale Snapping\n        </button>\n      </div>\n    </div>\n    </ErrorBoundary>;\n};\nexport const MovingTransforms = Template.bind({});\nMovingTransforms.storyName = \"Moving Transforms\";\nMovingTransforms.args = {\n  tfs: {\n    moving: {\n      frame: \"world\",\n      // position: { x: (time => Math.cos(time / 1000)), y: (time) => Math.sin(time / 1000), z: 0 },\n      position: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      rotation: {\n        w: 1,\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      scale: {\n        x: 1,\n        y: 1,\n        z: 1\n      },\n      transformMode: \"rotate\"\n    }\n  },\n  items: {\n    immovable: {\n      shape: \"cube\",\n      name: \"Immovable Cube\",\n      frame: \"moving\",\n      position: {\n        x: 0,\n        y: 0,\n        z: 1\n      },\n      rotation: {\n        w: 1,\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      color: {\n        r: 255,\n        g: 10,\n        b: 10,\n        a: 1\n      },\n      scale: {\n        x: 0.5,\n        y: 0.5,\n        z: 0.5\n      }\n    },\n    translateCube: {\n      shape: \"cube\",\n      name: \"Translate Cube (Async)\",\n      frame: \"moving\",\n      position: {\n        x: 1,\n        y: 1,\n        z: 1\n      },\n      rotation: {\n        w: 1,\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      color: {\n        r: 10,\n        g: 10,\n        b: 10,\n        a: 1\n      },\n      scale: {\n        x: 0.5,\n        y: 0.5,\n        z: 0.5\n      },\n      highlighted: false\n    },\n    rotateCube: {\n      shape: \"cube\",\n      name: \"Rotate Cube\",\n      frame: \"moving\",\n      position: {\n        x: 1,\n        y: 0,\n        z: 1\n      },\n      rotation: {\n        w: 1,\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      color: {\n        r: 10,\n        g: 255,\n        b: 10,\n        a: 1\n      },\n      scale: {\n        x: 0.5,\n        y: 0.5,\n        z: 0.5\n      },\n      highlighted: false\n    },\n    scaleCube: {\n      shape: \"cube\",\n      name: \"Scale Cube\",\n      frame: \"moving\",\n      position: {\n        x: 0,\n        y: 1,\n        z: 1\n      },\n      rotation: {\n        w: 1,\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      color: {\n        r: 10,\n        g: 10,\n        b: 255,\n        a: 1\n      },\n      scale: {\n        x: 0.5,\n        y: 0.5,\n        z: 0.5\n      },\n      highlighted: false\n    }\n  },\n  lines: {},\n  hulls: {},\n  texts: {},\n  points: {},\n  displayTfs: false,\n  displayGrid: true,\n  isPolar: false,\n  backgroundColor: \"#d0d0d0\",\n  planeColor: \"#a8a8a8\",\n  highlightColor: \"#ffffff\",\n  plane: -0.75,\n  fov: 60,\n  paused: false,\n  ar: false,\n  vr: false,\n  onPointerMissed: () => console.log(\"Missed Click\")\n};\nMovingTransforms.parameters = {\n  ...MovingTransforms.parameters,\n  docs: {\n    ...MovingTransforms.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  const {\\n    tfs,\\n    items,\\n    hulls,\\n    lines,\\n    texts,\\n    points,\\n    ...otherArgs\\n  } = args;\\n  const setProperty = useDefaultSceneStore(state => state.setProperty);\\n  const [translateSnap, setTranslateSnap] = useState(0);\\n  const [rotateSnap, setRotateSnap] = useState(0);\\n  const [scaleSnap, setScaleSnap] = useState(0);\\n  useEffect(() => {\\n    useDefaultSceneStore.setState({\\n      tfs,\\n      items,\\n      hulls,\\n      lines,\\n      texts,\\n      points\\n    });\\n  }, [tfs, items, hulls, lines, texts, points]);\\n  return <ErrorBoundary FallbackComponent={ErrorFallback}>\\n    <div style={{\\n      height: \\\"calc(100vh - 3rem)\\\",\\n      width: \\\"calc(100vw - 2rem)\\\"\\n    }}>\\n        \\n      <Scene {...otherArgs} store={useDefaultSceneStore} meshLookup={MeshLookupTable} displayTfs translateSnap={translateSnap} rotateSnap={rotateSnap} scaleSnap={scaleSnap} />\\n      <div style={{\\n        textAlign: \\\"center\\\"\\n      }}>\\n        <button onClick={() => {\\n          setTranslateSnap(0);\\n          setProperty([\\\"tfs\\\", \\\"moving\\\", \\\"transformMode\\\"], \\\"translate\\\");\\n        }}>\\n          Translate Free\\n        </button>\\n        <button onClick={() => {\\n          setTranslateSnap(0.25);\\n          setProperty([\\\"tfs\\\", \\\"moving\\\", \\\"transformMode\\\"], \\\"translate\\\");\\n        }}>\\n          Translate Snapping\\n        </button>\\n        <button onClick={() => {\\n          setRotateSnap(0);\\n          setProperty([\\\"tfs\\\", \\\"moving\\\", \\\"transformMode\\\"], \\\"rotate\\\");\\n        }}>\\n          Rotate Free\\n        </button>\\n        <button onClick={() => {\\n          setRotateSnap(Math.PI / 6);\\n          setProperty([\\\"tfs\\\", \\\"moving\\\", \\\"transformMode\\\"], \\\"rotate\\\");\\n        }}>\\n          Rotate Snapping\\n        </button>\\n        <button onClick={() => {\\n          setScaleSnap(0);\\n          setProperty([\\\"tfs\\\", \\\"moving\\\", \\\"transformMode\\\"], \\\"scale\\\");\\n        }}>\\n          Scale Free\\n        </button>\\n        <button onClick={() => {\\n          setScaleSnap(0.1);\\n          setProperty([\\\"tfs\\\", \\\"moving\\\", \\\"transformMode\\\"], \\\"scale\\\");\\n        }}>\\n          Scale Snapping\\n        </button>\\n      </div>\\n    </div>\\n    </ErrorBoundary>;\\n}\",\n      ...MovingTransforms.parameters?.docs?.source\n    }\n  }\n};"],"names":["TFMovement_stories","title","component","Scene","Template","args","tfs","items","hulls","lines","texts","points","otherArgs","setProperty","useDefaultSceneStore","state","translateSnap","setTranslateSnap","useState","rotateSnap","setRotateSnap","scaleSnap","setScaleSnap","useEffect","setState","ErrorBoundary","ErrorFallback","height","width","_jsx","MeshLookupTable","_jsxs","textAlign","Math","PI","MovingTransforms","bind","storyName","moving","frame","position","x","y","z","rotation","w","scale","transformMode","immovable","shape","name","color","r","g","b","a","translateCube","highlighted","rotateCube","scaleCube","displayTfs","displayGrid","isPolar","backgroundColor","planeColor","highlightColor","plane","fov","paused","ar","vr","onPointerMissed","console","log","parameters","docs","source","originalSource"],"mappings":"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"}